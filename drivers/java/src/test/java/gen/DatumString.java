// Autogenerated by convert_tests.py and process_polyglot.py.
// Do not edit this file directly.
// The template for this file is located at:
// ../../../../../templates/Test.java
package gen;

import com.rethinkdb.RethinkDB;
import com.rethinkdb.gen.exc.*;
import com.rethinkdb.gen.ast.*;
import com.rethinkdb.ast.ReqlAst;
import com.rethinkdb.model.MapObject;
import com.rethinkdb.model.OptArgs;
import com.rethinkdb.net.Connection;
import com.rethinkdb.net.Cursor;
import junit.framework.TestCase;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertArrayEquals;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import org.junit.*;
import org.junit.rules.ExpectedException;

import java.util.Arrays;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.time.OffsetDateTime;
import java.time.ZoneOffset;
import java.time.Instant;
import java.util.stream.LongStream;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.concurrent.TimeoutException;
import java.util.regex.Pattern;
import java.util.Collections;
import java.nio.charset.StandardCharsets;

import static gen.TestingCommon.*;
import gen.TestingFramework;

public class DatumString {
    // Tests of converstion to and from the RQL string type
    Logger logger = LoggerFactory.getLogger(DatumString.class);
    public static final RethinkDB r = RethinkDB.r;

    Connection conn;
    public String hostname = TestingFramework.getConfig().getHostName();
    public int port = TestingFramework.getConfig().getPort();

    @Before
    public void setUp() throws Exception {
        logger.info("Setting up.");
        conn = TestingFramework.createConnection();
        try {
            r.dbCreate("test").run(conn);
            r.db("test").wait_().run(conn);
        }catch (Exception e){}
    }

    @After
    public void tearDown() throws Exception {
        logger.info("Tearing down.");
        r.db("rethinkdb").table("_debug_scratch").delete().run(conn);
        if(!conn.isOpen()){
            conn.close();
            conn = TestingFramework.createConnection();
        }
        r.dbDrop("test").run(conn);
        conn.close(false);
    }

    // Autogenerated tests below

    @Test(timeout=120000)
    public void test() throws Exception {

        {
            // datum/string.yaml line #8
            /* "str" */
            String expected_ = "str";
            /* r.expr('str') */
            logger.info("About to run line #8: r.expr('str')");
            Object obtained = runOrCatch(r.expr("str"),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #8");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #8:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #13
            /* "str" */
            String expected_ = "str";
            /* r.expr("str") */
            logger.info("About to run line #13: r.expr('str')");
            Object obtained = runOrCatch(r.expr("str"),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #13");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #13:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #21
            /* 'str' */
            String expected_ = "str";
            /* r.expr(u'str') */
            logger.info("About to run line #21: r.expr('str')");
            Object obtained = runOrCatch(r.expr("str"),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #21");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #21:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #30
            /* 'こんにちは' */
            String expected_ = "こんにちは";
            /* r.expr(u'こんにちは') */
            logger.info("About to run line #30: r.expr('こんにちは')");
            Object obtained = runOrCatch(r.expr("こんにちは"),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #30");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #30:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #37
            /* 'STRING' */
            String expected_ = "STRING";
            /* r.expr('foo').type_of() */
            logger.info("About to run line #37: r.expr('foo').typeOf()");
            Object obtained = runOrCatch(r.expr("foo").typeOf(),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #37");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #37:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #41
            /* 'foo' */
            String expected_ = "foo";
            /* r.expr('foo').coerce_to('string') */
            logger.info("About to run line #41: r.expr('foo').coerceTo('string')");
            Object obtained = runOrCatch(r.expr("foo").coerceTo("string"),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #41");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #41:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #43
            /* -1.2 */
            Double expected_ = -1.2;
            /* r.expr('-1.2').coerce_to('NUMBER') */
            logger.info("About to run line #43: r.expr('-1.2').coerceTo('NUMBER')");
            Object obtained = runOrCatch(r.expr("-1.2").coerceTo("NUMBER"),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals((double) expected_,
                             ((Number) obtained).doubleValue(),
                             0.00000000001);
            logger.info("Finished running line #43");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #43:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #45
            /* err("ReqlQueryLogicError", "Could not coerce `--1.2` to NUMBER.", []) */
            Err expected_ = err("ReqlQueryLogicError", "Could not coerce `--1.2` to NUMBER.", r.array());
            /* r.expr('--1.2').coerce_to('NUMBER') */
            logger.info("About to run line #45: r.expr('--1.2').coerceTo('NUMBER')");
            Object obtained = runOrCatch(r.expr("--1.2").coerceTo("NUMBER"),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #45");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #45:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #47
            /* err("ReqlQueryLogicError", "Could not coerce `-1.2-` to NUMBER.", []) */
            Err expected_ = err("ReqlQueryLogicError", "Could not coerce `-1.2-` to NUMBER.", r.array());
            /* r.expr('-1.2-').coerce_to('NUMBER') */
            logger.info("About to run line #47: r.expr('-1.2-').coerceTo('NUMBER')");
            Object obtained = runOrCatch(r.expr("-1.2-").coerceTo("NUMBER"),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #47");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #47:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #49
            /* 10 */
            Long expected_ = 10L;
            /* r.expr('0xa').coerce_to('NUMBER') */
            logger.info("About to run line #49: r.expr('0xa').coerceTo('NUMBER')");
            Object obtained = runOrCatch(r.expr("0xa").coerceTo("NUMBER"),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #49");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #49:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #51
            /* err("ReqlQueryLogicError", "Non-finite number: inf", []) */
            Err expected_ = err("ReqlQueryLogicError", "Non-finite number: inf", r.array());
            /* r.expr('inf').coerce_to('NUMBER') */
            logger.info("About to run line #51: r.expr('inf').coerceTo('NUMBER')");
            Object obtained = runOrCatch(r.expr("inf").coerceTo("NUMBER"),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #51");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #51:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #55
            /* [] */
            List expected_ = r.array();
            /* r.expr('').split() */
            logger.info("About to run line #55: r.expr('').split()");
            Object obtained = runOrCatch(r.expr("").split(),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #55");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #55:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #57
            /* [] */
            List expected_ = r.array();
            /* r.expr('').split(null) */
            logger.info("About to run line #57: r.expr('').split((ReqlExpr) null)");
            Object obtained = runOrCatch(r.expr("").split((ReqlExpr) null),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #57");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #57:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #59
            /* [''] */
            List expected_ = r.array("");
            /* r.expr('').split(' ') */
            logger.info("About to run line #59: r.expr('').split(' ')");
            Object obtained = runOrCatch(r.expr("").split(" "),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #59");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #59:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #61
            /* [] */
            List expected_ = r.array();
            /* r.expr('').split('') */
            logger.info("About to run line #61: r.expr('').split('')");
            Object obtained = runOrCatch(r.expr("").split(""),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #61");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #61:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #63
            /* [] */
            List expected_ = r.array();
            /* r.expr('').split(null, 5) */
            logger.info("About to run line #63: r.expr('').split((ReqlExpr) null, 5L)");
            Object obtained = runOrCatch(r.expr("").split((ReqlExpr) null, 5L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #63");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #63:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #65
            /* [''] */
            List expected_ = r.array("");
            /* r.expr('').split(' ', 5) */
            logger.info("About to run line #65: r.expr('').split(' ', 5L)");
            Object obtained = runOrCatch(r.expr("").split(" ", 5L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #65");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #65:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #67
            /* [] */
            List expected_ = r.array();
            /* r.expr('').split('', 5) */
            logger.info("About to run line #67: r.expr('').split('', 5L)");
            Object obtained = runOrCatch(r.expr("").split("", 5L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #67");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #67:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #70
            /* ['aaaa', 'bbbb', 'cccc'] */
            List expected_ = r.array("aaaa", "bbbb", "cccc");
            /* r.expr('aaaa bbbb  cccc ').split() */
            logger.info("About to run line #70: r.expr('aaaa bbbb  cccc ').split()");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc ").split(),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #70");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #70:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #72
            /* ['aaaa', 'bbbb', 'cccc'] */
            List expected_ = r.array("aaaa", "bbbb", "cccc");
            /* r.expr('aaaa bbbb  cccc ').split(null) */
            logger.info("About to run line #72: r.expr('aaaa bbbb  cccc ').split((ReqlExpr) null)");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc ").split((ReqlExpr) null),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #72");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #72:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #74
            /* ['aaaa', 'bbbb', '', 'cccc', ''] */
            List expected_ = r.array("aaaa", "bbbb", "", "cccc", "");
            /* r.expr('aaaa bbbb  cccc ').split(' ') */
            logger.info("About to run line #74: r.expr('aaaa bbbb  cccc ').split(' ')");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc ").split(" "),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #74");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #74:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #76
            /* ['a', 'a', 'a', 'a', ' ', 'b', 'b', 'b', 'b', ' ', ' ', 'c', 'c', 'c', 'c', ' '] */
            List expected_ = r.array("a", "a", "a", "a", " ", "b", "b", "b", "b", " ", " ", "c", "c", "c", "c", " ");
            /* r.expr('aaaa bbbb  cccc ').split('') */
            logger.info("About to run line #76: r.expr('aaaa bbbb  cccc ').split('')");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc ").split(""),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #76");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #76:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #78
            /* ['aaaa ', '', '', '', '  cccc '] */
            List expected_ = r.array("aaaa ", "", "", "", "  cccc ");
            /* r.expr('aaaa bbbb  cccc ').split('b') */
            logger.info("About to run line #78: r.expr('aaaa bbbb  cccc ').split('b')");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc ").split("b"),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #78");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #78:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #80
            /* ['aaaa ', '', '  cccc '] */
            List expected_ = r.array("aaaa ", "", "  cccc ");
            /* r.expr('aaaa bbbb  cccc ').split('bb') */
            logger.info("About to run line #80: r.expr('aaaa bbbb  cccc ').split('bb')");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc ").split("bb"),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #80");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #80:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #82
            /* ['aaaa', 'cccc '] */
            List expected_ = r.array("aaaa", "cccc ");
            /* r.expr('aaaa bbbb  cccc ').split(' bbbb  ') */
            logger.info("About to run line #82: r.expr('aaaa bbbb  cccc ').split(' bbbb  ')");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc ").split(" bbbb  "),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #82");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #82:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #84
            /* ['aaaa ', '', '  cccc b d ', ' e ', '', ' f'] */
            List expected_ = r.array("aaaa ", "", "  cccc b d ", " e ", "", " f");
            /* r.expr('aaaa bbbb  cccc b d bb e bbbb f').split('bb') */
            logger.info("About to run line #84: r.expr('aaaa bbbb  cccc b d bb e bbbb f').split('bb')");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc b d bb e bbbb f").split("bb"),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #84");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #84:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #86
            /* ['aaaa', 'cccc b d bb e bbbb f'] */
            List expected_ = r.array("aaaa", "cccc b d bb e bbbb f");
            /* r.expr('aaaa bbbb  cccc b d bb e bbbb f').split(' bbbb  ') */
            logger.info("About to run line #86: r.expr('aaaa bbbb  cccc b d bb e bbbb f').split(' bbbb  ')");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc b d bb e bbbb f").split(" bbbb  "),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #86");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #86:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #88
            /* ['aaaa', 'cccc b d bb e', 'f'] */
            List expected_ = r.array("aaaa", "cccc b d bb e", "f");
            /* r.expr('aaaa bbbb  cccc b d bb e bbbb  f').split(' bbbb  ') */
            logger.info("About to run line #88: r.expr('aaaa bbbb  cccc b d bb e bbbb  f').split(' bbbb  ')");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc b d bb e bbbb  f").split(" bbbb  "),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #88");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #88:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #91
            /* ['aaaa', 'bbbb', 'cccc'] */
            List expected_ = r.array("aaaa", "bbbb", "cccc");
            /* r.expr('aaaa bbbb  cccc ').split(null, 3) */
            logger.info("About to run line #91: r.expr('aaaa bbbb  cccc ').split((ReqlExpr) null, 3L)");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc ").split((ReqlExpr) null, 3L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #91");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #91:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #93
            /* ['aaaa', 'bbbb', '', 'cccc', ''] */
            List expected_ = r.array("aaaa", "bbbb", "", "cccc", "");
            /* r.expr('aaaa bbbb  cccc ').split(' ', 5) */
            logger.info("About to run line #93: r.expr('aaaa bbbb  cccc ').split(' ', 5L)");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc ").split(" ", 5L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #93");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #93:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #95
            /* ['a', 'a', 'a', 'a', ' ', 'bbbb  cccc '] */
            List expected_ = r.array("a", "a", "a", "a", " ", "bbbb  cccc ");
            /* r.expr('aaaa bbbb  cccc ').split('', 5) */
            logger.info("About to run line #95: r.expr('aaaa bbbb  cccc ').split('', 5L)");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc ").split("", 5L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #95");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #95:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #97
            /* ['aaaa ', '', '', '', '  cccc '] */
            List expected_ = r.array("aaaa ", "", "", "", "  cccc ");
            /* r.expr('aaaa bbbb  cccc ').split('b', 5) */
            logger.info("About to run line #97: r.expr('aaaa bbbb  cccc ').split('b', 5L)");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc ").split("b", 5L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #97");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #97:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #99
            /* ['aaaa ', '', '  cccc '] */
            List expected_ = r.array("aaaa ", "", "  cccc ");
            /* r.expr('aaaa bbbb  cccc ').split('bb', 3) */
            logger.info("About to run line #99: r.expr('aaaa bbbb  cccc ').split('bb', 3L)");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc ").split("bb", 3L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #99");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #99:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #101
            /* ['aaaa', 'cccc '] */
            List expected_ = r.array("aaaa", "cccc ");
            /* r.expr('aaaa bbbb  cccc ').split(' bbbb  ', 2) */
            logger.info("About to run line #101: r.expr('aaaa bbbb  cccc ').split(' bbbb  ', 2L)");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc ").split(" bbbb  ", 2L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #101");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #101:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #103
            /* ['aaaa ', '', '  cccc b d ', ' e ', '', ' f'] */
            List expected_ = r.array("aaaa ", "", "  cccc b d ", " e ", "", " f");
            /* r.expr('aaaa bbbb  cccc b d bb e bbbb f').split('bb', 6) */
            logger.info("About to run line #103: r.expr('aaaa bbbb  cccc b d bb e bbbb f').split('bb', 6L)");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc b d bb e bbbb f").split("bb", 6L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #103");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #103:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #105
            /* ['aaaa', 'cccc b d bb e bbbb f'] */
            List expected_ = r.array("aaaa", "cccc b d bb e bbbb f");
            /* r.expr('aaaa bbbb  cccc b d bb e bbbb f').split(' bbbb  ', 2) */
            logger.info("About to run line #105: r.expr('aaaa bbbb  cccc b d bb e bbbb f').split(' bbbb  ', 2L)");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc b d bb e bbbb f").split(" bbbb  ", 2L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #105");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #105:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #107
            /* ['aaaa', 'cccc b d bb e', 'f'] */
            List expected_ = r.array("aaaa", "cccc b d bb e", "f");
            /* r.expr('aaaa bbbb  cccc b d bb e bbbb  f').split(' bbbb  ', 3) */
            logger.info("About to run line #107: r.expr('aaaa bbbb  cccc b d bb e bbbb  f').split(' bbbb  ', 3L)");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc b d bb e bbbb  f").split(" bbbb  ", 3L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #107");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #107:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #110
            /* ['aaaa', 'bbbb', 'cccc '] */
            List expected_ = r.array("aaaa", "bbbb", "cccc ");
            /* r.expr('aaaa bbbb  cccc ').split(null, 2) */
            logger.info("About to run line #110: r.expr('aaaa bbbb  cccc ').split((ReqlExpr) null, 2L)");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc ").split((ReqlExpr) null, 2L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #110");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #110:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #112
            /* ["a", "b"] */
            List expected_ = r.array("a", "b");
            /* r.expr("a  b  ").split(null, 2) */
            logger.info("About to run line #112: r.expr('a  b  ').split((ReqlExpr) null, 2L)");
            Object obtained = runOrCatch(r.expr("a  b  ").split((ReqlExpr) null, 2L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #112");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #112:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #114
            /* ['aaaa', 'bbbb', '', 'cccc', ''] */
            List expected_ = r.array("aaaa", "bbbb", "", "cccc", "");
            /* r.expr('aaaa bbbb  cccc ').split(' ', 4) */
            logger.info("About to run line #114: r.expr('aaaa bbbb  cccc ').split(' ', 4L)");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc ").split(" ", 4L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #114");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #114:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #116
            /* ['a', 'a', 'a', 'a', ' bbbb  cccc '] */
            List expected_ = r.array("a", "a", "a", "a", " bbbb  cccc ");
            /* r.expr('aaaa bbbb  cccc ').split('', 4) */
            logger.info("About to run line #116: r.expr('aaaa bbbb  cccc ').split('', 4L)");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc ").split("", 4L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #116");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #116:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #118
            /* ['aaaa ', '', '', '', '  cccc '] */
            List expected_ = r.array("aaaa ", "", "", "", "  cccc ");
            /* r.expr('aaaa bbbb  cccc ').split('b', 4) */
            logger.info("About to run line #118: r.expr('aaaa bbbb  cccc ').split('b', 4L)");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc ").split("b", 4L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #118");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #118:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #120
            /* ['aaaa ', '', '  cccc '] */
            List expected_ = r.array("aaaa ", "", "  cccc ");
            /* r.expr('aaaa bbbb  cccc ').split('bb', 2) */
            logger.info("About to run line #120: r.expr('aaaa bbbb  cccc ').split('bb', 2L)");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc ").split("bb", 2L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #120");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #120:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #122
            /* ['aaaa', 'cccc '] */
            List expected_ = r.array("aaaa", "cccc ");
            /* r.expr('aaaa bbbb  cccc ').split(' bbbb  ', 1) */
            logger.info("About to run line #122: r.expr('aaaa bbbb  cccc ').split(' bbbb  ', 1L)");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc ").split(" bbbb  ", 1L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #122");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #122:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #124
            /* ['aaaa ', '', '  cccc b d ', ' e ', '', ' f'] */
            List expected_ = r.array("aaaa ", "", "  cccc b d ", " e ", "", " f");
            /* r.expr('aaaa bbbb  cccc b d bb e bbbb f').split('bb', 5) */
            logger.info("About to run line #124: r.expr('aaaa bbbb  cccc b d bb e bbbb f').split('bb', 5L)");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc b d bb e bbbb f").split("bb", 5L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #124");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #124:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #126
            /* ['aaaa', 'cccc b d bb e bbbb f'] */
            List expected_ = r.array("aaaa", "cccc b d bb e bbbb f");
            /* r.expr('aaaa bbbb  cccc b d bb e bbbb f').split(' bbbb  ', 1) */
            logger.info("About to run line #126: r.expr('aaaa bbbb  cccc b d bb e bbbb f').split(' bbbb  ', 1L)");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc b d bb e bbbb f").split(" bbbb  ", 1L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #126");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #126:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #128
            /* ['aaaa', 'cccc b d bb e', 'f'] */
            List expected_ = r.array("aaaa", "cccc b d bb e", "f");
            /* r.expr('aaaa bbbb  cccc b d bb e bbbb  f').split(' bbbb  ', 2) */
            logger.info("About to run line #128: r.expr('aaaa bbbb  cccc b d bb e bbbb  f').split(' bbbb  ', 2L)");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc b d bb e bbbb  f").split(" bbbb  ", 2L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #128");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #128:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #131
            /* ['aaaa', 'bbbb  cccc '] */
            List expected_ = r.array("aaaa", "bbbb  cccc ");
            /* r.expr('aaaa bbbb  cccc ').split(null, 1) */
            logger.info("About to run line #131: r.expr('aaaa bbbb  cccc ').split((ReqlExpr) null, 1L)");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc ").split((ReqlExpr) null, 1L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #131");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #131:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #133
            /* ['aaaa', 'bbbb', ' cccc '] */
            List expected_ = r.array("aaaa", "bbbb", " cccc ");
            /* r.expr('aaaa bbbb  cccc ').split(' ', 2) */
            logger.info("About to run line #133: r.expr('aaaa bbbb  cccc ').split(' ', 2L)");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc ").split(" ", 2L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #133");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #133:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #135
            /* ['a', 'a', 'aa bbbb  cccc '] */
            List expected_ = r.array("a", "a", "aa bbbb  cccc ");
            /* r.expr('aaaa bbbb  cccc ').split('', 2) */
            logger.info("About to run line #135: r.expr('aaaa bbbb  cccc ').split('', 2L)");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc ").split("", 2L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #135");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #135:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #137
            /* ['aaaa ', '', 'bb  cccc '] */
            List expected_ = r.array("aaaa ", "", "bb  cccc ");
            /* r.expr('aaaa bbbb  cccc ').split('b', 2) */
            logger.info("About to run line #137: r.expr('aaaa bbbb  cccc ').split('b', 2L)");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc ").split("b", 2L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #137");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #137:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #139
            /* ['aaaa ', '', '  cccc '] */
            List expected_ = r.array("aaaa ", "", "  cccc ");
            /* r.expr('aaaa bbbb  cccc ').split('bb', 2) */
            logger.info("About to run line #139: r.expr('aaaa bbbb  cccc ').split('bb', 2L)");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc ").split("bb", 2L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #139");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #139:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #141
            /* ['aaaa', 'cccc '] */
            List expected_ = r.array("aaaa", "cccc ");
            /* r.expr('aaaa bbbb  cccc ').split(' bbbb  ', 2) */
            logger.info("About to run line #141: r.expr('aaaa bbbb  cccc ').split(' bbbb  ', 2L)");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc ").split(" bbbb  ", 2L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #141");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #141:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #143
            /* ['aaaa ', '', '  cccc b d bb e bbbb f'] */
            List expected_ = r.array("aaaa ", "", "  cccc b d bb e bbbb f");
            /* r.expr('aaaa bbbb  cccc b d bb e bbbb f').split('bb', 2) */
            logger.info("About to run line #143: r.expr('aaaa bbbb  cccc b d bb e bbbb f').split('bb', 2L)");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc b d bb e bbbb f").split("bb", 2L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #143");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #143:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #145
            /* ['aaaa', 'cccc b d bb e bbbb f'] */
            List expected_ = r.array("aaaa", "cccc b d bb e bbbb f");
            /* r.expr('aaaa bbbb  cccc b d bb e bbbb f').split(' bbbb  ', 2) */
            logger.info("About to run line #145: r.expr('aaaa bbbb  cccc b d bb e bbbb f').split(' bbbb  ', 2L)");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc b d bb e bbbb f").split(" bbbb  ", 2L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #145");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #145:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #147
            /* ['aaaa', 'cccc b d bb e', 'f'] */
            List expected_ = r.array("aaaa", "cccc b d bb e", "f");
            /* r.expr('aaaa bbbb  cccc b d bb e bbbb  f').split(' bbbb  ', 2) */
            logger.info("About to run line #147: r.expr('aaaa bbbb  cccc b d bb e bbbb  f').split(' bbbb  ', 2L)");
            Object obtained = runOrCatch(r.expr("aaaa bbbb  cccc b d bb e bbbb  f").split(" bbbb  ", 2L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #147");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #147:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #150
            /* [] */
            List expected_ = r.array();
            /* r.expr('  ').split() */
            logger.info("About to run line #150: r.expr('  ').split()");
            Object obtained = runOrCatch(r.expr("  ").split(),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #150");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #150:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #152
            /* [] */
            List expected_ = r.array();
            /* r.expr('  ').split(null) */
            logger.info("About to run line #152: r.expr('  ').split((ReqlExpr) null)");
            Object obtained = runOrCatch(r.expr("  ").split((ReqlExpr) null),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #152");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #152:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #154
            /* ['', '', ''] */
            List expected_ = r.array("", "", "");
            /* r.expr('  ').split(' ') */
            logger.info("About to run line #154: r.expr('  ').split(' ')");
            Object obtained = runOrCatch(r.expr("  ").split(" "),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #154");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #154:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #156
            /* [] */
            List expected_ = r.array();
            /* r.expr('  ').split(null, 5) */
            logger.info("About to run line #156: r.expr('  ').split((ReqlExpr) null, 5L)");
            Object obtained = runOrCatch(r.expr("  ").split((ReqlExpr) null, 5L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #156");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #156:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #158
            /* ['', '', ''] */
            List expected_ = r.array("", "", "");
            /* r.expr('  ').split(' ', 5) */
            logger.info("About to run line #158: r.expr('  ').split(' ', 5L)");
            Object obtained = runOrCatch(r.expr("  ").split(" ", 5L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #158");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #158:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #161
            /* ['aaaa', 'bbbb', 'cccc'] */
            List expected_ = r.array("aaaa", "bbbb", "cccc");
            /* r.expr('  aaaa bbbb  cccc ').split() */
            logger.info("About to run line #161: r.expr('  aaaa bbbb  cccc ').split()");
            Object obtained = runOrCatch(r.expr("  aaaa bbbb  cccc ").split(),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #161");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #161:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #163
            /* ['aaaa', 'bbbb', 'cccc'] */
            List expected_ = r.array("aaaa", "bbbb", "cccc");
            /* r.expr('  aaaa bbbb  cccc ').split(null) */
            logger.info("About to run line #163: r.expr('  aaaa bbbb  cccc ').split((ReqlExpr) null)");
            Object obtained = runOrCatch(r.expr("  aaaa bbbb  cccc ").split((ReqlExpr) null),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #163");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #163:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #165
            /* ['', '', 'aaaa', 'bbbb', '', 'cccc', ''] */
            List expected_ = r.array("", "", "aaaa", "bbbb", "", "cccc", "");
            /* r.expr('  aaaa bbbb  cccc ').split(' ') */
            logger.info("About to run line #165: r.expr('  aaaa bbbb  cccc ').split(' ')");
            Object obtained = runOrCatch(r.expr("  aaaa bbbb  cccc ").split(" "),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #165");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #165:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #167
            /* ['  aaaa ', '', '', '', '  cccc '] */
            List expected_ = r.array("  aaaa ", "", "", "", "  cccc ");
            /* r.expr('  aaaa bbbb  cccc ').split('b') */
            logger.info("About to run line #167: r.expr('  aaaa bbbb  cccc ').split('b')");
            Object obtained = runOrCatch(r.expr("  aaaa bbbb  cccc ").split("b"),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #167");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #167:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #169
            /* ['  aaaa ', '', '  cccc '] */
            List expected_ = r.array("  aaaa ", "", "  cccc ");
            /* r.expr('  aaaa bbbb  cccc ').split('bb') */
            logger.info("About to run line #169: r.expr('  aaaa bbbb  cccc ').split('bb')");
            Object obtained = runOrCatch(r.expr("  aaaa bbbb  cccc ").split("bb"),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #169");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #169:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #171
            /* ['  aaaa', 'cccc '] */
            List expected_ = r.array("  aaaa", "cccc ");
            /* r.expr('  aaaa bbbb  cccc ').split(' bbbb  ') */
            logger.info("About to run line #171: r.expr('  aaaa bbbb  cccc ').split(' bbbb  ')");
            Object obtained = runOrCatch(r.expr("  aaaa bbbb  cccc ").split(" bbbb  "),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #171");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #171:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #173
            /* ['  aaaa ', '', '  cccc b d ', ' e ', '', ' f'] */
            List expected_ = r.array("  aaaa ", "", "  cccc b d ", " e ", "", " f");
            /* r.expr('  aaaa bbbb  cccc b d bb e bbbb f').split('bb') */
            logger.info("About to run line #173: r.expr('  aaaa bbbb  cccc b d bb e bbbb f').split('bb')");
            Object obtained = runOrCatch(r.expr("  aaaa bbbb  cccc b d bb e bbbb f").split("bb"),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #173");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #173:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #175
            /* ['  aaaa', 'cccc b d bb e bbbb f'] */
            List expected_ = r.array("  aaaa", "cccc b d bb e bbbb f");
            /* r.expr('  aaaa bbbb  cccc b d bb e bbbb f').split(' bbbb  ') */
            logger.info("About to run line #175: r.expr('  aaaa bbbb  cccc b d bb e bbbb f').split(' bbbb  ')");
            Object obtained = runOrCatch(r.expr("  aaaa bbbb  cccc b d bb e bbbb f").split(" bbbb  "),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #175");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #175:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #177
            /* ['  aaaa', 'cccc b d bb e', 'f'] */
            List expected_ = r.array("  aaaa", "cccc b d bb e", "f");
            /* r.expr('  aaaa bbbb  cccc b d bb e bbbb  f').split(' bbbb  ') */
            logger.info("About to run line #177: r.expr('  aaaa bbbb  cccc b d bb e bbbb  f').split(' bbbb  ')");
            Object obtained = runOrCatch(r.expr("  aaaa bbbb  cccc b d bb e bbbb  f").split(" bbbb  "),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #177");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #177:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #180
            /* ['aaaa', 'bbbb', 'cccc'] */
            List expected_ = r.array("aaaa", "bbbb", "cccc");
            /* r.expr('  aaaa bbbb  cccc ').split(null, 3) */
            logger.info("About to run line #180: r.expr('  aaaa bbbb  cccc ').split((ReqlExpr) null, 3L)");
            Object obtained = runOrCatch(r.expr("  aaaa bbbb  cccc ").split((ReqlExpr) null, 3L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #180");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #180:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #182
            /* ['', '', 'aaaa', 'bbbb', '', 'cccc '] */
            List expected_ = r.array("", "", "aaaa", "bbbb", "", "cccc ");
            /* r.expr('  aaaa bbbb  cccc ').split(' ', 5) */
            logger.info("About to run line #182: r.expr('  aaaa bbbb  cccc ').split(' ', 5L)");
            Object obtained = runOrCatch(r.expr("  aaaa bbbb  cccc ").split(" ", 5L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #182");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #182:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #184
            /* ['  aaaa ', '', '', '', '  cccc '] */
            List expected_ = r.array("  aaaa ", "", "", "", "  cccc ");
            /* r.expr('  aaaa bbbb  cccc ').split('b', 5) */
            logger.info("About to run line #184: r.expr('  aaaa bbbb  cccc ').split('b', 5L)");
            Object obtained = runOrCatch(r.expr("  aaaa bbbb  cccc ").split("b", 5L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #184");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #184:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #186
            /* ['  aaaa ', '', '  cccc '] */
            List expected_ = r.array("  aaaa ", "", "  cccc ");
            /* r.expr('  aaaa bbbb  cccc ').split('bb', 3) */
            logger.info("About to run line #186: r.expr('  aaaa bbbb  cccc ').split('bb', 3L)");
            Object obtained = runOrCatch(r.expr("  aaaa bbbb  cccc ").split("bb", 3L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #186");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #186:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #188
            /* ['  aaaa', 'cccc '] */
            List expected_ = r.array("  aaaa", "cccc ");
            /* r.expr('  aaaa bbbb  cccc ').split(' bbbb  ', 2) */
            logger.info("About to run line #188: r.expr('  aaaa bbbb  cccc ').split(' bbbb  ', 2L)");
            Object obtained = runOrCatch(r.expr("  aaaa bbbb  cccc ").split(" bbbb  ", 2L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #188");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #188:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #190
            /* ['  aaaa ', '', '  cccc b d ', ' e ', '', ' f'] */
            List expected_ = r.array("  aaaa ", "", "  cccc b d ", " e ", "", " f");
            /* r.expr('  aaaa bbbb  cccc b d bb e bbbb f').split('bb', 6) */
            logger.info("About to run line #190: r.expr('  aaaa bbbb  cccc b d bb e bbbb f').split('bb', 6L)");
            Object obtained = runOrCatch(r.expr("  aaaa bbbb  cccc b d bb e bbbb f").split("bb", 6L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #190");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #190:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #192
            /* ['  aaaa', 'cccc b d bb e bbbb f'] */
            List expected_ = r.array("  aaaa", "cccc b d bb e bbbb f");
            /* r.expr('  aaaa bbbb  cccc b d bb e bbbb f').split(' bbbb  ', 2) */
            logger.info("About to run line #192: r.expr('  aaaa bbbb  cccc b d bb e bbbb f').split(' bbbb  ', 2L)");
            Object obtained = runOrCatch(r.expr("  aaaa bbbb  cccc b d bb e bbbb f").split(" bbbb  ", 2L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #192");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #192:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #194
            /* ['  aaaa', 'cccc b d bb e', 'f'] */
            List expected_ = r.array("  aaaa", "cccc b d bb e", "f");
            /* r.expr('  aaaa bbbb  cccc b d bb e bbbb  f').split(' bbbb  ', 3) */
            logger.info("About to run line #194: r.expr('  aaaa bbbb  cccc b d bb e bbbb  f').split(' bbbb  ', 3L)");
            Object obtained = runOrCatch(r.expr("  aaaa bbbb  cccc b d bb e bbbb  f").split(" bbbb  ", 3L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #194");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #194:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #197
            /* ['aaaa', 'bbbb', 'cccc '] */
            List expected_ = r.array("aaaa", "bbbb", "cccc ");
            /* r.expr('  aaaa bbbb  cccc ').split(null, 2) */
            logger.info("About to run line #197: r.expr('  aaaa bbbb  cccc ').split((ReqlExpr) null, 2L)");
            Object obtained = runOrCatch(r.expr("  aaaa bbbb  cccc ").split((ReqlExpr) null, 2L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #197");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #197:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #199
            /* ["a", "b"] */
            List expected_ = r.array("a", "b");
            /* r.expr("a  b  ").split(null, 2) */
            logger.info("About to run line #199: r.expr('a  b  ').split((ReqlExpr) null, 2L)");
            Object obtained = runOrCatch(r.expr("a  b  ").split((ReqlExpr) null, 2L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #199");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #199:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #201
            /* ['', '', 'aaaa', 'bbbb', ' cccc '] */
            List expected_ = r.array("", "", "aaaa", "bbbb", " cccc ");
            /* r.expr('  aaaa bbbb  cccc ').split(' ', 4) */
            logger.info("About to run line #201: r.expr('  aaaa bbbb  cccc ').split(' ', 4L)");
            Object obtained = runOrCatch(r.expr("  aaaa bbbb  cccc ").split(" ", 4L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #201");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #201:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #203
            /* ['  aaaa ', '', '', '', '  cccc '] */
            List expected_ = r.array("  aaaa ", "", "", "", "  cccc ");
            /* r.expr('  aaaa bbbb  cccc ').split('b', 4) */
            logger.info("About to run line #203: r.expr('  aaaa bbbb  cccc ').split('b', 4L)");
            Object obtained = runOrCatch(r.expr("  aaaa bbbb  cccc ").split("b", 4L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #203");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #203:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #205
            /* ['  aaaa ', '', '  cccc '] */
            List expected_ = r.array("  aaaa ", "", "  cccc ");
            /* r.expr('  aaaa bbbb  cccc ').split('bb', 2) */
            logger.info("About to run line #205: r.expr('  aaaa bbbb  cccc ').split('bb', 2L)");
            Object obtained = runOrCatch(r.expr("  aaaa bbbb  cccc ").split("bb", 2L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #205");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #205:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #207
            /* ['  aaaa', 'cccc '] */
            List expected_ = r.array("  aaaa", "cccc ");
            /* r.expr('  aaaa bbbb  cccc ').split(' bbbb  ', 1) */
            logger.info("About to run line #207: r.expr('  aaaa bbbb  cccc ').split(' bbbb  ', 1L)");
            Object obtained = runOrCatch(r.expr("  aaaa bbbb  cccc ").split(" bbbb  ", 1L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #207");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #207:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #209
            /* ['  aaaa ', '', '  cccc b d ', ' e ', '', ' f'] */
            List expected_ = r.array("  aaaa ", "", "  cccc b d ", " e ", "", " f");
            /* r.expr('  aaaa bbbb  cccc b d bb e bbbb f').split('bb', 5) */
            logger.info("About to run line #209: r.expr('  aaaa bbbb  cccc b d bb e bbbb f').split('bb', 5L)");
            Object obtained = runOrCatch(r.expr("  aaaa bbbb  cccc b d bb e bbbb f").split("bb", 5L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #209");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #209:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #211
            /* ['  aaaa', 'cccc b d bb e bbbb f'] */
            List expected_ = r.array("  aaaa", "cccc b d bb e bbbb f");
            /* r.expr('  aaaa bbbb  cccc b d bb e bbbb f').split(' bbbb  ', 1) */
            logger.info("About to run line #211: r.expr('  aaaa bbbb  cccc b d bb e bbbb f').split(' bbbb  ', 1L)");
            Object obtained = runOrCatch(r.expr("  aaaa bbbb  cccc b d bb e bbbb f").split(" bbbb  ", 1L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #211");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #211:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #213
            /* ['  aaaa', 'cccc b d bb e', 'f'] */
            List expected_ = r.array("  aaaa", "cccc b d bb e", "f");
            /* r.expr('  aaaa bbbb  cccc b d bb e bbbb  f').split(' bbbb  ', 2) */
            logger.info("About to run line #213: r.expr('  aaaa bbbb  cccc b d bb e bbbb  f').split(' bbbb  ', 2L)");
            Object obtained = runOrCatch(r.expr("  aaaa bbbb  cccc b d bb e bbbb  f").split(" bbbb  ", 2L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #213");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #213:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #216
            /* ['aaaa', 'bbbb  cccc '] */
            List expected_ = r.array("aaaa", "bbbb  cccc ");
            /* r.expr('  aaaa bbbb  cccc ').split(null, 1) */
            logger.info("About to run line #216: r.expr('  aaaa bbbb  cccc ').split((ReqlExpr) null, 1L)");
            Object obtained = runOrCatch(r.expr("  aaaa bbbb  cccc ").split((ReqlExpr) null, 1L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #216");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #216:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #218
            /* ['', '', 'aaaa bbbb  cccc '] */
            List expected_ = r.array("", "", "aaaa bbbb  cccc ");
            /* r.expr('  aaaa bbbb  cccc ').split(' ', 2) */
            logger.info("About to run line #218: r.expr('  aaaa bbbb  cccc ').split(' ', 2L)");
            Object obtained = runOrCatch(r.expr("  aaaa bbbb  cccc ").split(" ", 2L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #218");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #218:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #220
            /* ['  aaaa ', '', 'bb  cccc '] */
            List expected_ = r.array("  aaaa ", "", "bb  cccc ");
            /* r.expr('  aaaa bbbb  cccc ').split('b', 2) */
            logger.info("About to run line #220: r.expr('  aaaa bbbb  cccc ').split('b', 2L)");
            Object obtained = runOrCatch(r.expr("  aaaa bbbb  cccc ").split("b", 2L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #220");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #220:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #222
            /* ['  aaaa ', '', '  cccc '] */
            List expected_ = r.array("  aaaa ", "", "  cccc ");
            /* r.expr('  aaaa bbbb  cccc ').split('bb', 2) */
            logger.info("About to run line #222: r.expr('  aaaa bbbb  cccc ').split('bb', 2L)");
            Object obtained = runOrCatch(r.expr("  aaaa bbbb  cccc ").split("bb", 2L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #222");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #222:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #224
            /* ['  aaaa', 'cccc '] */
            List expected_ = r.array("  aaaa", "cccc ");
            /* r.expr('  aaaa bbbb  cccc ').split(' bbbb  ', 2) */
            logger.info("About to run line #224: r.expr('  aaaa bbbb  cccc ').split(' bbbb  ', 2L)");
            Object obtained = runOrCatch(r.expr("  aaaa bbbb  cccc ").split(" bbbb  ", 2L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #224");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #224:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #226
            /* ['  aaaa ', '', '  cccc b d bb e bbbb f'] */
            List expected_ = r.array("  aaaa ", "", "  cccc b d bb e bbbb f");
            /* r.expr('  aaaa bbbb  cccc b d bb e bbbb f').split('bb', 2) */
            logger.info("About to run line #226: r.expr('  aaaa bbbb  cccc b d bb e bbbb f').split('bb', 2L)");
            Object obtained = runOrCatch(r.expr("  aaaa bbbb  cccc b d bb e bbbb f").split("bb", 2L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #226");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #226:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #228
            /* ['  aaaa', 'cccc b d bb e bbbb f'] */
            List expected_ = r.array("  aaaa", "cccc b d bb e bbbb f");
            /* r.expr('  aaaa bbbb  cccc b d bb e bbbb f').split(' bbbb  ', 2) */
            logger.info("About to run line #228: r.expr('  aaaa bbbb  cccc b d bb e bbbb f').split(' bbbb  ', 2L)");
            Object obtained = runOrCatch(r.expr("  aaaa bbbb  cccc b d bb e bbbb f").split(" bbbb  ", 2L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #228");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #228:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #230
            /* ['  aaaa', 'cccc b d bb e', 'f'] */
            List expected_ = r.array("  aaaa", "cccc b d bb e", "f");
            /* r.expr('  aaaa bbbb  cccc b d bb e bbbb  f').split(' bbbb  ', 2) */
            logger.info("About to run line #230: r.expr('  aaaa bbbb  cccc b d bb e bbbb  f').split(' bbbb  ', 2L)");
            Object obtained = runOrCatch(r.expr("  aaaa bbbb  cccc b d bb e bbbb  f").split(" bbbb  ", 2L),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #230");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #230:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #233
            /* "ABC-DEF-GHJ" */
            String expected_ = "ABC-DEF-GHJ";
            /* r.expr("abc-dEf-GHJ").upcase() */
            logger.info("About to run line #233: r.expr('abc-dEf-GHJ').upcase()");
            Object obtained = runOrCatch(r.expr("abc-dEf-GHJ").upcase(),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #233");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #233:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #235
            /* "abc-def-ghj" */
            String expected_ = "abc-def-ghj";
            /* r.expr("abc-dEf-GHJ").downcase() */
            logger.info("About to run line #235: r.expr('abc-dEf-GHJ').downcase()");
            Object obtained = runOrCatch(r.expr("abc-dEf-GHJ").downcase(),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #235");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #235:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #240
            /* ["f", "\u00e9", "o", "o"] */
            List expected_ = r.array("f", "é", "o", "o");
            /* r.expr(u"f\u00e9oo").split("") */
            logger.info("About to run line #240: r.expr('féoo').split('')");
            Object obtained = runOrCatch(r.expr("féoo").split(""),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #240");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #240:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #249
            /* ["f", "e\u0301", "o", "o"] */
            List expected_ = r.array("f", "é", "o", "o");
            /* r.expr(u"fe\u0301oo").split("") */
            logger.info("About to run line #249: r.expr('féoo').split('')");
            Object obtained = runOrCatch(r.expr("féoo").split(""),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #249");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #249:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #262
            /* ["foo", "bar", "baz", "quux", "fred", "barney", "wilma"] */
            List expected_ = r.array("foo", "bar", "baz", "quux", "fred", "barney", "wilma");
            /* r.expr(u"foo bar\tbaz\nquux\rfred\u000bbarney\u000cwilma").split() */
            logger.info("About to run line #262: r.expr('foo bar\\tbaz\\nquux\\rfred\\u000bbarney\\u000cwilma').split()");
            Object obtained = runOrCatch(r.expr("foo bar\tbaz\nquux\rfred\u000bbarney\u000cwilma").split(),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #262");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #262:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }

        {
            // datum/string.yaml line #278
            /* ["foo", "bar", "baz\u2060quux", "fred", "barney", "wilma", "betty\u200b"] */
            List expected_ = r.array("foo", "bar", "baz\u2060quux", "fred", "barney", "wilma", "betty\u200b");
            /* r.expr(u"foo\u00a0bar\u2001baz\u2060quux\u2028fred\u2028barney\u2029wilma\u0085betty\u200b").split() */
            logger.info("About to run line #278: r.expr('foo\\u00a0bar\\u2001baz\\u2060quux\\u2028fred\\u2028barney\\u2029wilma\\u0085betty\\u200b').split()");
            Object obtained = runOrCatch(r.expr("foo\u00a0bar\u2001baz\u2060quux\u2028fred\u2028barney\u2029wilma\u0085betty\u200b").split(),
                                          new OptArgs()
                                          ,conn);
            try {
                assertEquals(expected_, obtained);
            logger.info("Finished running line #278");
            } catch (Throwable ae) {
                logger.error("Whoops, got exception on line #278:" + ae.toString());
                if(obtained instanceof Throwable) {
                    ae.addSuppressed((Throwable) obtained);
                }
                throw ae;
            }
        }
    }
}
